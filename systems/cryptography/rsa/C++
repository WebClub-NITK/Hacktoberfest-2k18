//RSA Algorithm
//By Rajat Mittal

#include<bits/stdc++.h>
using namespace std;

class RSA
{
       public:
              long long int p,q,n,t,flag,e,d,temp[1000],j,inp[1000],en[1000],i;
              string msg;
              RSA(long long x, long long y, string s)
              {
                     p = x;
                     q = y;
                     msg = s;
                     n=p*q;
                     t=(p-1)*(q-1);
                     for(int i=0;i<msg.size();i++)
                     {
                           inp[i] = msg[i];
                     }
              }
             
              int prime(long long pr)
              {
                     long long i;
                     j=sqrt(pr);
                     for (i=2;i<=j;i++) {
                           if(pr%i==0)
                               return 0;
                     }
                     return 1;
              }
              void generate_public_key()
              {
                     long long k;
                     k=0;
                     for (i=2;i<t;i++)
                     {
                           if(t%i==0)
                               continue;
                           flag=prime(i);
                           if( flag==1 && i!=p && i!=q)
                           {
                                  e=i;
                                  flag=generate_private_key(e);
                                  if(flag>0) {

                                    	d = flag;
                                    	break;
                                  }
                              
                           }
                     }      
              }
              long long int generate_private_key(long long int x)
              {
                     long long int k=1;
                     while(1) {
                           k=k+t;
                           if(k%x==0)
                               return(k/x);
                     }
              }
              void encrypt(long long x)
              {
                     long long int pt,ct,key=x,k,len;
                     cout<<"Value of e used is "<<key<<endl;
                     i=0;
                     len = msg.size();
                     while(i!=len)
                     {
                           pt=inp[i];
                           pt=pt-96;
                           k=1;
                           for (j=0;j<key;j++)
                           {
                                  k=k*pt;
                                  k=k%n;
                           }
                           temp[i]=k;
                           ct=k+96;
                           en[i]=ct;
                           i++;
                     }
                     en[i]=-1;
                     cout<<"The Encrypted Message : "<<endl;
                     for (i=0;en[i]!=-1;i++)
                     cout<<(char)en[i];
                     cout<<endl;
              }
              void decrypt( long long int x)
              {
                     long  long int pt,ct,key=x,k;
                     cout<<"Value of d used is "<<key<<endl;
                     i=0;
                     while(en[i]!=-1)
                     {
                           ct=temp[i];
                           k=1;
                           for (j=0;j<key;j++) {
                                  k=k*ct;
                                  k=k%n;
                           }
                           pt=k+96;
                           inp[i]=pt;
                           i++;
                     }
                     inp[i]=-1;
                     cout<<"The Decrypted Message : "<<endl;
                     for (i=0;inp[i]!=-1;i++)
                     cout<<(char)inp[i];
                     cout<<endl;
              }
};

int main()
{
       long n,p,q,x;
       cout<<"Enter any two Prime Numbers P & Q"<<endl;
       cin>>p>>q;
       cout<<"Enter the Message"<<endl;
       string message;
	   cin>>message;	
       RSA obj(p,q,message);
       if(obj.prime(p)==0 || obj.prime(q)==0 )
       {
       		cout<<"Either P or Q is not a prime number.";
       		return 0;
	   }
	   obj.generate_public_key();	
       obj.encrypt(obj.e);
       cout<<endl;
       obj.decrypt(obj.d);
       return 0;
}
